name: pull-request-preview
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deploy-preview.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for invalid files
        run: |
          if [ -f "package-lock.json" ]; then
            echo "Error: project-lock.json found in the root of the project. Remove it before proceeding."
            exit 1
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache yarn packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install Vercel CLI
        run: yarn global add vercel
      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=Vercel-digido-prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy preview
        id: deploy-preview
        run: |
          du --inodes -d 5 .vercel/output
          ls -l .vercel/output/functions
          preview_url="$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})"
          echo "url=$preview_url" >> $GITHUB_OUTPUT
          echo "deployed to $preview_url"
      - name: Comment PR with preview url
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = '${{ steps.deploy-preview.outputs.url }}';
            const pr = context.payload.pull_request;
            const comment = `🎉 Successful Deployment to Vercel! 🎉\n\n🔍 Preview  URL: ${url}\n\nCommit SHA: ${pr.head.sha}`;
            github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
