name: Deploy to Vercel Production
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  workflow_dispatch:
  # We have the option to use GitHub releases to run this instead of main branch pushes
  # release:
  #  types: [published]
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache yarn packages
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=Vercel-digido-prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Production
        id: deploy-production
        run: |
          OUTPUT=$(du --inodes -d 5 .vercel/output)
          echo "$OUTPUT"
          LAST=$(echo "$OUTPUT" | tail -n 1)
          PERCENTAGE=$(echo "$LAST" | awk 'BEGIN {maxtotal=15000} { printf "%.2f%%", ($1/maxtotal*100) }')
          echo "Vercel file usage percentage" >> $GITHUB_STEP_SUMMARY
          echo "$PERCENTAGE" >> $GITHUB_STEP_SUMMARY
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
